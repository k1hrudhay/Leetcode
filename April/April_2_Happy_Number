################ Problem ##################

'''
Write an algorithm to determine if a number n is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Return True if n is a happy number, and False if not.

Example: 

Input: 19
Output: true
Explanation: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

'''

################   Solution ########################


class Solution:
    def isHappy(self, n: int) -> bool:
        result=0
        total=[]
        while True:
            temp_list=[int(i) for i in list(str(n))]
            if len(temp_list) == 1:
                result = temp_list[0]*temp_list[0]
            else:
                result = result = sum([i*i for i in temp_list])
            if result == 1:
                return True
            elif result in total:
                return False
            else:
                total.append(result)
                n = result
        
            
        
