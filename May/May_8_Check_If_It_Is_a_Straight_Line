
########### Problem ##################

'''
You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

Example 1:



Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 

Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.

'''



############  Solution ##################

class Solution:
    def checkStraightLine(self, coordinates: List[List[int]]) -> bool:
        if len(coordinates) == 2:
            return 1
        else:
            if (coordinates[1][0]-coordinates[0][0]) == 0:
              slope = -1
            else:
              slope = (coordinates[1][1]-coordinates[0][1])/(coordinates[1][0]-coordinates[0][0])

              temp_slope = 0
              chk = 1
              for i in range(2,len(coordinates)):
                if (coordinates[i][0]-coordinates[i-1][0]) == 0 :
                  if  coordinates[i][1] != coordinates[i-1][1] and coordinates[i][1] != coordinates[1][1]:
                    chk = 0
                    break;
                  else:
                    temp_slope = -1
                else:
                  temp_slope = (coordinates[i][1]-coordinates[i-1][1])/(coordinates[i][0]-coordinates[i-1][0])

                if temp_slope != slope:
                  chk = 0
                  break;
        
              return chk
        
'''
coordinates = [[-1,1],[-6,-4],[-6,2],[2,0],[-1,-2],[0,-4]]
x0, y0, x1, y1 = *coordinates[0], *coordinates[1]
dx, dy = x1- x0, y1 - y0
print(all((x - x0) * dy == (y - y0) * dx for x, y in coordinates))
'''
