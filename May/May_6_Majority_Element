####################   Problem #########################

Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times.

# You may assume that the array is non-empty and the majority element always exist in the array.

# Example 1:

# Input: [3,2,3]
# Output: 3
# Example 2:

# Input: [2,2,1,1,1,2,2]
# Output: 2

##################  Solution ############################

from math import floor
class Solution:
    def majorityElement(self, nums: List[int]) -> int:
#         n = len(nums)
#         nums_set = set(nums)
#         maj_num=0
#         cnt = 0
#         for i in nums_set:
#             if nums.count(i) > cnt:
#                 cnt = nums.count(i)
#                 maj_num = i
                
#         return maj_num
            
        temp=[]
        maj_num=0
        cnt = 0
        for i in nums:
            if i not in temp:
                if nums.count(i) > cnt :
                    maj_num = i
                    cnt = nums.count(i)
                    temp.append(i)
            else:
                continue
                
        return maj_num
                
                
